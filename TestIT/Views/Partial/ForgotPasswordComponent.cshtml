@using TestIT.Web.ViewModels.Account
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *,TestIT.Web
@model ForgotPasswordViewModel

@{
    ViewData["Title"] = "Login";
}

<div fxLayout="column" fxFlex class="login" *ngIf="forgotPasswordViewModel != null">
    <md-card class="login-card" fxFlex>
        <md-card-content class="mat-card-content">
            <form role="form" [formGroup]="forgotPasswordForm" novalidate>
                <div><h4 style="margin-top: 20px;">Forgot Password?</h4><p>Please enter your email address to restore password</p></div>
                <div fxLayout="column" fxLayoutGap="1rem" fxlayoutAlign="space-around">
                    <md-input-container class="full-width">
                        <input mdInput type="email" placeholder="Email" required name="email" formControlName="email">
                        <button md-icon-button mdSuffix (click)="clearEmail($event)"><md-icon>close</md-icon></button>
                        <md-hint align="left" *ngIf="formErrors.email" class="error">{{ formErrors.email }}</md-hint>
                    </md-input-container>
                    </div>
                <div fxLayout="column" fxLayoutGap="1rem" fxlayoutAlign="space-around" style="margin-top: 1rem">
                    <button md-raised-button color="primary" type="button" (click)="forgotPassword($event)" class="upper" [disabled]="!forgotPasswordForm.valid">Reset Password</button>
                    <p>
                        Not registered? <a routerLink="/register"> Click here to Register</a>
                    </p>
                </div>

            </form>
        </md-card-content>
    </md-card>
</div>

<div *ngIf="errorMessage != null">
    <p>Error:</p>
    <pre>{{ errorMessage  }}</pre>
</div>